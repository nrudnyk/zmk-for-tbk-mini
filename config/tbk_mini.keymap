#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        escape_combo {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };
    };

    behaviors {
        qrpi: qrpi {
            compatible = "zmk,behavior-hold-tap";
            label = "QRPI";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp LEFT_ALT    &kp Q                 &kp W  &kp E     &kp R      &kp T          &kp Y  &kp U      &kp I      &kp O    &kp P                    &kp BACKSLASH
&kp TAB         &kp A                 &kp S  &kp D     &kp F      &kp G          &kp H  &kp J      &kp K      &kp L    &kp SEMI                 &kp SQT
&kp LEFT_SHIFT  &qrpi LEFT_CONTROL Z  &kp X  &kp C     &kp V      &kp B          &kp N  &kp M      &kp COMMA  &kp DOT  &mt RIGHT_CONTROL SLASH  &lt 3 GRAVE
                                             &kp LGUI  &kp SPACE  &kp BACKSPACE  &mo 1  &lt 2 RET  &kp RALT
            >;
        };

        lower_layer {
            bindings = <
&kp GRAVE  &kp N1           &kp N2       &kp N3    &kp N4          &kp N5           &kp N6            &kp N7             &kp N8        &kp N9                &kp N0                 &kp MINUS
&trans     &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR      &kp PERCENT      &kp CARET         &kp AMPERSAND      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
&trans     &trans           &trans       &trans    &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans        &trans                &trans                 &trans
                                         &trans    &trans          &trans           &trans            &trans             &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5      &mt C_PLAY_PAUSE C_VOLUME_UP  &kp C_PREV      &kp UP    &kp C_NEXT       &trans   &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR  &mt C_MUTE C_VOLUME_DOWN      &kp LEFT_ARROW  &kp DOWN  &kp RIGHT_ARROW  &trans   &kp F12
&trans  &trans        &trans        &trans        &trans        &trans      &kp F6                        &kp F7          &kp F8    &kp F9           &kp F10  &kp F11
                                    &trans        &trans        &trans      &trans                        &trans          &trans
            >;
        };

        rgb_layer {
            bindings = <
&rgb_ug RGB_TOG                   &trans           &trans           &trans           &trans           &trans           &trans  &trans  &trans  &trans  &trans  &trans
&rgb_ug RGB_COLOR_HSB(184,76,39)  &trans           &trans           &trans           &trans           &trans           &trans  &trans  &trans  &trans  &trans  &trans
&rgb_ug RGB_BRD                   &rgb_ug RGB_BRI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &trans  &trans  &trans  &trans  &trans  &trans
                                                                    &rgb_ug RGB_SPD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFF  &trans  &trans  &trans
            >;
        };
    };
};

&led_strip { chain-length = <21>; };
